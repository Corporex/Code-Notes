#JavaScript DOM

### When you request a website, it responds with HTML. 
- These bytes recieved are run through complicated and documented `parsing process` 
- ===> determine different characters (eg., start tag character, atribute) 
- ===> tokenizer 
- ===> tokens (DOCTYPE, start tag, end tag, comments) 
- ===> DOM (a tree structure that captures the content and properties of the HTML and all the relationships between the nodes)


[JavaScript Closure, SetOutTime, Scopes](https://medium.com/coderbyte/a-tricky-javascript-interview-question-asked-by-google-and-amazon-48d212890703)


THE DOM
The document object is provided by the browser and is a representation of the HTML document. 
This object is not provided by the JavaScript language. 
ECMAScript is the language specification that JavaScript is based on, 
and it only references the document object model in one place, in its "Global Object" section:

The DOM stands for "Document Object Model" and is a tree-like structure that is a representation of the HTML document, 
the relationship between elements, and contains the content and properties of the elements.

The DOM is not:
part of the JavaScript language

The DOM is:
- constructed from the browser
- globally accessible by JavaScript code using the document object
- used all of the time and is what we'll be using throughout this course!

So to reiterate the process, it's:
- characters
- tags
- tokens
- nodes
- DOM

SELECTING AN ELEMENT BY ID
```
document.getElementById();
```
If we ran the code above in the console, we wouldn't get anything, because we did not tell it the ID of any element to get! We need to pass a string to .getElementById() of the ID of the element that we want it to find and subsequently return to us:
``` 
document.getElementById('footer');
```
Selecting Multiple Elements At Once
The next two DOM methods that we'll be looking at that both return multiple elements are:
`.getElementsByClassName()`
`.getElementsByTagName()`

Accessing Elements By Their Tag
After looking at both .getElementById() and .getElementsByClassName(), the new .getElementsByTagName() method should seem quite easy on the eyes:

```
document.getElementsByTagName('p');
```
There are a few important things to keep in mind about these two methods:
1) both methods use the document object
2) both return multiple items
3) the list that's returned is not an array

Node
A Node acts like a blueprint containing all the data (properties) and the functionality (methods). This is called an interface. Based on the interface we know the properties and methods that are going to be applied to the individual items, which we call nodes.


ELEMENT INTERFACE
The element interface inherits all properties AND methods from the Node. It is a descendent iself of the node, as well as its elements.

Example:


created together with @ArtNerd 

